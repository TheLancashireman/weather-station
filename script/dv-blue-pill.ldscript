/*  Memory layout:
 *
 *  The Blue Pill board (STM32F103C8T6) has 128 KiB flash at 0x08000000 and 20 KiB ram at 0x20000000
 *
 *  The boot vector consists of:
 *		- the initial stack pointer
 *		- the starting address
 *
 *  In order to boot correctly from flash, the boot vector must be at 0x08000000. This when the board is
 *  configured to boot from flash, this block of memory gets aliased to 0 (the reset value of the vector base
 *  address register) so it makes sense to put the whole vector table at 0x08000000.
 *
 *	An interesting consequence of the M3's boot vector is that you don't need to write any assembly
 *	language code for startup. On most microcontrollers you have to initialise the stack pointer at the
 *	very least.
 *
 *  Copyright David Haworth
 *
 *  This file is part of weather-station.
 *
 *  weather-station is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  weather-station is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with weather-station.  If not, see <http://www.gnu.org/licenses/>.
*/

MEMORY
{
    flash	(rxa)	: org = 0x08000000, len = 0x20000	/* 128 KiB */
	ram		(rw)	: org = 0x20000000, len = 0x5000	/* 20 KiB */
}

SECTIONS
{
    .text	0x08000000	:
	{
		build/obj/dv-cortexm-vectors.o(.rodata*)
		*(.text*)
	} > flash

	.rodata	BLOCK(16) :
	{
		*(.rodata*)
	} > flash

	.idata	BLOCK(16) :
	{
		dv_idata = .;
		KEEP(*(.dv_dummysection))
	} > flash

	.data	0x20000000	: AT( ADDR(.idata) )
	{
		dv_start_data = .;
		*(.data*)
		FILL(0x00)
		. = ALIGN(16);
		dv_end_data = .;
	} > ram

    .bss	BLOCK(16) (NOLOAD) :
	{
		dv_start_bss = .;
		*(.bss*)
		dv_end_bss = .;
	} > ram

/* Main stack at the top of memory, 1 KiB.
 * Process stack just underneath.
*/
dv_stacktop = (0x20000000 + 0x5000);
dv_pstacktop = (dv_stacktop - 2048);

  /* These sections appear to be generated by the compiler.
   * We doesn't use them.
  */
    .stack              : { *(.stack)       }

  /* The remainder are DWARF-2 debug sections. They contain
   * ELF relocations and must be located at zero.
  */
    . = 0x0;
    .debug_aranges      : { *(.debug_aranges)   }
    . = 0x0;
    .debug_pubnames     : { *(.debug_pubnames)  }
    . = 0x0;
    .debug_info         : { *(.debug_info)  }
    . = 0x0;
    .debug_abbrev       : { *(.debug_abbrev)    }
    . = 0x0;
    .debug_line         : { *(.debug_line)  }
}
